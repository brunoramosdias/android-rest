apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'maven-publish'
apply plugin: 'pmd'


group = 'com.devopcience.android_rest'
version = '1.0.1-ALPHA'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 23
        versionCode 1
        versionName "1.0.1-ALPHA"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}


bintray {
    user = 'brunoramosdias'
    key = 'c95a8885f826f186f36213146d4b403ef111a0e1'
    pkg {
        repo = 'maven'
        name = 'com.devopcience.android_rest'


        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/brunoramosdias/droid-tools.git'
        websiteUrl = 'https://github.com/brunoramosdias/droid-tools'
    }
    configurations = ['archives']


}


task generateSourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier 'sources'
}

task generateJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath()
            .join(File.pathSeparator))
}


task pmd(type: Pmd, dependsOn: assembleDebug) {
    description 'Run pmd'
    group 'verification'
    ruleSets = [
            'java-android',
            'java-basic',
            'java-braces',
            'java-clone',
            'java-codesize',
            'java-comments',
            'java-controversial',
            'java-coupling',
            'java-design',
            'java-empty',
            'java-finalizers',
            'java-imports',
            'java-logging-java',
            'java-naming',
            'java-optimizations',
            'java-strictexception',
            'java-strings',
            'java-sunsecure',
            'java-typeresolution',
            'java-unnecessary',
            'java-unusedcode'
    ]
    source = fileTree('src/main/java')
    consoleOutput = true
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

check.doLast {
    project.tasks.getByName("pmd").execute()
}


artifacts {
    archives generateSourcesJar
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.4.0'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.7.4'
}
